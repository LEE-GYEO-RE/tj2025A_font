
// [ 네이버 증권 토론실/게시판 ] 자료 구성

/* 
    1. 저장할 자료들을 조사
        회사명 , (게시물) 작성일 , (게시물)제목 , (게시물)글쓴이 , (게시물)조회수 
        (게시물)내용 , (댓글)내용 , (댓글)작성자 , (댓글)작성일
    
    2. 자료들을 분리 ( 상-하 관계 / 계층 관계 ) : 먼저 클릭 되는 게 상위 개념
         ex)회사명 클릭 - > 카테고리 클릭 - > 게시물 클릭 - > 댓글 : 이런 느낌
        - 종목정보(카테고리) *상* ---> 게시물 *중* ---> 댓글 *하*
        (1) 회사명 1개 당 게시물 N개
            '삼성전자' 종목에 다수 게시물이 존재한다.
        (2) 게시물 1개 당 댓글 N개   

    3. 각 분리된 정보들을 객체화
        종목 = { code : '005930' , name : '삼성전자' }
        게시물 = { nid : '1' , title : '안녕하세요' , 
                 writer : '유재석' , view : 5 , content : '내용입니다.' , date : '2025-06-16'}
        댓글 = { rid : '1' , content : '댓글내용' ,
                 writer : '신동엽' , date : '2025-06-16' } 

    4. 각 분리된 정보(객체) 들을 연관
        종목 = { code : '005930' , name : '삼성전자' }
        게시물 = { *code : '005930'* , title : '안녕하세요' , 
                 writer : '유재석' , view : 5 , content : '내용입니다.' , date : '2025-06-16'}
        댓글 = { *nid = '1'* , rid : '1' , content : '댓글내용' ,
                 writer : '신동엽' , date : '2025-06-16' } 
        
    --------> 1. 모든 자료들을 하나의 객체/행으로 관리하면 어려움( 유지/보수 관리 어려움 , 중복 발생 )
    --------> 2. 의미상 데이터가 동일한 자료들 끼리 분리
    --------> 3. 분리된 데이터들 끼리 연관 관계 맺기
        종목 코드 (1) <-----> 게시물 (N)   
        게시물코드 (1) <-----> 댓글(N)
        * 1(식별코드) : 중복없는 데이터.  == 사번, 학번, 주민등록번호, 제품번호 등등..
    =======================================================> 데이터베이스 정규화
*/