/*
실습9 과제: 회원별 구독 상태 (관리자) 대시보드 만들기
우리 회사의 서비스에 가입한 '회원' 목록, 회사가 제공하는 '구독 상품' 목록, 
그리고 어떤 회원이 어떤 상품을 언제까지 구독하는지를 나타내는 '구독 내역' 목록이 있습니다. 
이 세 가지 데이터를 조합하여 각 회원의 현재 구독 상태를 보여주는 관리자용 대시보드를 웹페이지에 동적으로 구현해야 합니다.

* 요구 사항
1. 데이터 모델링 : 배열과 객체를 활용하여 샘플데이터로 구성하시오.
   (1) 아래 각 정보는 필수로 합니다. 
   - 회원정보 : 아이디 , 회원이름
   - 구독상품 : 상품명 , 가격 
   - 구독내역 : 구독종료일 
   (2) 각 정보별 식별 가능한 정보를 추가합니다.
   (3) 각 정보별 샘플(임의)데이터는 3개 이상씩 하여 배열 또는 객체를 선언 합니다.
2. 구현 로직
3. 최종 결과물 예시
   * 웹페이지에 다음과 같은 형식으로 각 유저의 정보가 표시되어야 합니다.
   * 단  HTML 와 CSS 구성/코드 는 달라도 됩니다. 
*/

/*
작업 순서
*/


/*
    5. (로직)
        (1) 현재 회원들 중에서 구독중인 
        (2) 하나씩 조회중인 회원정보가 구독로그테이블(배열) 내 '회원코드'가 일치한 정보 확인 하시오.
        (3) 일치한 회원코드가 있으면(구독중인 상태) '구독중' ,
            일치한 회원코드가 없으면(구독중이 아닌상태) '구독내역이 없습니다.' 
            라고 document.write()에 출력하시오.
        (4) 구독내역이 있을때 구독중인 구독상품명과 가격을 찾아서 '상품명(가격)'
        (5) 현재날짜(today)가 구독종료일 보다 크면 '만료' 아니면 '활성' 이라고 상태를 출력하시오.

*/
const 회원테이블 = [
    { 회원코드 : 1 , 아이디 : 'id1' , 회원이름 : '김개발' },
    { 회원코드 : 2 , 아이디 : 'id2' , 회원이름 : '최코딩' },
    { 회원코드 : 3 , 아이디 : 'id3' , 회원이름 : '박서버' }
]

const 구독상품테이블 = [
    { 상품코드 : 1 , 상품명 : '프리미엄' , 가격 : '월 15000원' },
    { 상품코드 : 2 , 상품명 : '베이직' , 가격 : '월 9900원' },
    { 상품코드 : 3 , 상품명 : '광고형 베이직' , 가격 : '월 4900원' }
]

const 구독로그테이블 = [
    { 구독번호 : 1 , 회원코드 : 1 , 상품코드 : 1 , 구독종료일 : '2025-06-20'},
    { 구독번호 : 2 , 회원코드 : 2 , 상품코드 : 2 , 구독종료일 : '2025-06-15'}
]
const today = "2025-06-17";
//======================= 로직 ===========================
let 구독check = false;
let 구독상품코드 = -1; // 상품코드가 가질 수 없는 임의 값
let 구독활성화 = '';
for( let i = 0 ; i <= 회원테이블.length -1 ; i++){  // i는 0부터 마지막 인덱스(회원)까지 1씩 증가
    let 회원 = 회원테이블[i]; // i번째 회원(객체) 조회
    for( j = 0 ; j <= 구독로그테이블.length -1 ; j++){ // j는 0부터 마지막 인덱스(로그)까지 1씩 증가
        let 구독로그 = 구독로그테이블[j];   // j번째 구독로그(객체) 정보 조회
        if ( 회원.회원코드 == 구독로그.회원코드 ){ // * 만약에 i번째 회원코드가 j번쨰 회원코드가 같으면
            구독check = true; // 현재 회원코드가 구독로그에 존재한다!!! (체크)
            구독상품코드 = 구독로그.상품코드; // 현재 구독중인 상품코드를 기록한다.
            if( 구독로그.구독종료일 < today){ // 만약에 구독중인 구독종료일이 현재날짜 보다 작으면
                구독활성화 = "만료";
            }else{
                구독활성화 = "활성";
            }
        } // * 구독 로그를 전체 확인 (반복문이 종료될때 확인)
    } // for2 end

    document.write('<hr/>') // 구분선
    let html = `<h3> ${ 회원.회원이름 } </h3>`;
    if( 구독check == true ){  // 구독내역있음
        // (4) 구독내역이 있을때 구독중인 구독상품명과 가격을 찾아서 '상품명(가격)'
        for( let t = 0 ; t <= 구독상품테이블.length -1 ; t++){  // t는 0부터 마지막 인덱스(가격)까지 1씩 증가
            let 상품 = 구독상품테이블[t];   // t번째 구독상품테이블(객체) 정보조회
            if( 상품.상품코드 == 구독상품코드){ // t번째 구독상품코드와 i번째 회원의 구독중인 상품코드와 같으면
                html += `<ul> 
                            <li> 구독상품 : ${상품.상품명} ${상품.가격} </li> 
                            <li> 상태: ${구독활성화}  </li> 
                        </ul>`
            }
        } 
    }else{ // 구독내역없음
        html += `<div> 구독 내역이 없습니다.`
    }
    //
    document.write( html );
} // for1 end
